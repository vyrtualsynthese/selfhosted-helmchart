# Default values for autobrr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/autobrr/autobrr
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1.57.0"

# Choose deployment strategy type
strategyType: Recreate

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 7474

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

probs:
  failureThreshold: 3
  timeoutSeconds: 10
  periodSeconds: 90
  initialDelaySeconds: 40
  path:
    startup: "/healthz/liveness"
    readiness: "/healthz/readiness"

storage:
  class: ~
  accessModes: ReadWriteOnce
  dataSize: 1Gi
  # -- Use an existing PersistentVolumeClaim, overrides values above
  existingClaim: ""

# Additional volumes on the output Deployment definition.
volumes: []

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}

env:
  TZ: "Europe/Paris"
  AUTOBRR__HOST: "0.0.0.0"
  AUTOBRR__PORT: "7474"
  #AUTOBRR__BASE_URL: ""
  #AUTOBRR__LOG_LEVEL: ""
  #AUTOBRR__LOG_PATH: ""
  #AUTOBRR__LOG_MAX_SIZE: ""
  #AUTOBRR__LOG_MAX_BACKUPS: ""
  #AUTOBRR__SESSION_SECRET: ""
  #AUTOBRR__CUSTOM_DEFINITIONS: ""
  #AUTOBRR__CHECK_FOR_UPDATES: ""
